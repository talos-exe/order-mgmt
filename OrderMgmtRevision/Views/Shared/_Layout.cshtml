@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    var user = User.Identity.IsAuthenticated ? await UserManager.GetUserAsync(User) : null;
    var isAdmin = user != null && await UserManager.IsInRoleAsync(user, "Admin");
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - OrderMgmtRevision</title>
    @RenderSection("Styles", required: false)
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/OrderMgmtRevision.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
    
</head>
<body>

    <div class="main-container">
        <div class="sidebar-container position-fixed vh-100">
            <div class="sidebar-header">
                领星 OMS
            </div>
            <div class="sidebar-content">
                <ul class="sidebar-list">
                    <li class="sidebar-link">
                        <a class="sidebar-anchor" asp-controller="Dashboard" asp-action="Index">
                            <i class="bi bi-house-fill"></i>
                            @Localizer["Dashboard"]
                        </a>
                    </li>
                    <li class="sidebar-link">
                        <a class="sidebar-anchor" asp-controller="Products" asp-action="Index">
                            <i class="bi bi-box-seam-fill"></i>
                            @Localizer["Products"]
                        </a>
                    </li>
                    <li class="sidebar-link">
                        <a class="sidebar-anchor" asp-controller="Warehouse" asp-action="Index">
                            <i class="bi bi-building-fill"></i>
                            @Localizer["Warehouse"]
                        </a>
                    </li>
                    <li class="sidebar-link">
                        <a class="sidebar-anchor" asp-controller="Shipping" asp-action="Index">
                            <i class="bi bi-box-seam-fill"></i>
                            @Localizer["Shipping"]
                        </a>
                    </li>
                    <li class="sidebar-link">
                        <a class="sidebar-anchor" asp-controller="Settings" asp-action="Index">
                            <i class="bi bi-gear-fill"></i>
                            @Localizer["Settings"]
                        </a>
                    </li>
                    @if (isAdmin)
                    {
                        <li class="sidebar-link">
                            <a class="sidebar-anchor" asp-controller="UserManagement" asp-action="Index">
                                <i class="bi bi-person-circle"></i>
                                @Localizer["User Management"]
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="main-content">
            <div class="topbar">
                <div class="tab-group" id="tabsContainer" data-tabs="[]">
                    <div class="tab">
                        @Localizer["Dashboard"]
                        <i class="bi bi-x"></i>
                    </div>
                </div>
                <div class="topbar-right">
                    <div class="right-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false" id="langDropdown">
                            🌐 <span id="language-display">@Localizer["English"]</span>
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="langDropdown">
                            <li><a class="dropdown-item" href="javascript:void(0);" onclick="updateLanguage('English')">@Localizer["English"]</a></li>
                            <li><a class="dropdown-item" href="javascript:void(0);" onclick="updateLanguage('中文')">@Localizer["中文 (Chinese)"]</a></li>
                        </ul>
                    </div>

                    <div class="right-item dropdown">
                        <i class="bi bi-person-circle d-inline"></i>
                        @if (User.Identity != null && User.Identity.IsAuthenticated)
                        {
                            <a class="nav-link dropdown-toggle ms-2" href="#" role="button" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                @User.Identity.Name
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                                <li><a class="dropdown-item" asp-controller="Account" asp-action="Logout">@Localizer["Logout"]</a></li>
                            </ul>
                        }
                        else
                        {
                            <a class="nav-link ms-2" asp-controller="Account" asp-action="Login">@Localizer["Login"]</a>
                        }
                    </div>
                </div>
            </div>

            <main role="main">
                <div id="loadingScreen">
                    <div class="spinner"></div>
                </div>
                @RenderBody()
            </main>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/tabs.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/additional-methods.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        function toggleDropdown(dropdown) {
            dropdown.classList.toggle('show');

            var isExpanded = dropdown.classList.contains('show');
            dropdown.setAttribute('aria-expanded', isExpanded ? 'true' : 'false');
        }

        function updateAriaExpanded() {
            var dropdownToggle = document.getElementById('userDropdown');
            if (dropdownToggle) {
                toggleDropdown(userDropdown);
            }

            var langDropdown = document.getElementById('langDropdown');
            if (langDropdown) {
                toggleDropdown(langDropdown);
            }
        }


         function updateLanguage(language) {
            const langCode = language === 'English' ? 'en' : 'zh';
            const returnUrl = window.location.pathname;
            window.location.href = `/Localization/SetLanguage?lang=${langCode}&returnUrl=${encodeURIComponent(returnUrl)}`;
        }

        window.addEventListener('DOMContentLoaded', () => {
            var dropdownToggle = document.getElementById('userDropdown');
            var langDropdown = document.getElementById('langDropdown');
            const cookies = document.cookie.split('; ');
            const cultureCookie = cookies.find(c => c.startsWith('.AspNetCore.Culture='));

            let lang = 'en';
            if (cultureCookie) {
                try {
                    const encodedValue = cultureCookie.split('=')[1];
                    const decoded = decodeURIComponent(encodedValue); // e.g. c=zh|uic=zh
                    const match = decoded.match(/c=([^|]+)/);
                    if (match && match[1]) {
                        lang = match[1].toLowerCase();
                    }
                } catch (e) {
                    console.warn('Error decoding culture cookie:', e);
                }
            }

            const label = document.getElementById('language-display');
            if (label) {
                label.textContent = lang.startsWith('zh') ? '中文' : 'English';
            }

            if (dropdownToggle) {
                dropdownToggle.addEventListener('click', function() {
                    toggleDropdown(dropdownToggle);
                })
            }

            if (langDropdown) {
            langDropdown.addEventListener('click', function() {
                toggleDropdown(langDropdown);
            });
        }
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
