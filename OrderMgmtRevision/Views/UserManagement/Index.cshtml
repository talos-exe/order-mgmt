@model X.PagedList.IPagedList<OrderMgmtRevision.Models.UserViewModel>
@using Microsoft.AspNetCore.Mvc.Localization
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@inject IViewLocalizer Localizer

<h2 class="text-center mb-4 pt-4">@Localizer["User Management"]</h2>

<ul class="nav nav-tabs ms-5 me-5" id="adminTabs">
    <li class="nav-item">
        <a class="nav-link active" id="userListTab" data-bs-toggle="tab" href="#userList">@Localizer["User List"]</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="userLogsTab" data-bs-toggle="tab" href="#userLogs">@Localizer["User Logs"]</a>
    </li>
</ul>

<div class="tab-content mt-3">

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show ms-5 me-5" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show ms-5 me-5" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Errors"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show ms-5 me-5" role="alert">
            <ul>
                @foreach (var error in (TempData["Errors"] as IEnumerable<string> ?? new List<string>()))
                {
                    <li>@error</li>
                }
            </ul>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="tab-pane show active" id="userList">
        <div class="ms-5 me-5">
            <div class="d-flex justify-content-start mb-2">
                <button id="btnCreate" class="btn btn-primary btn-sm me-2" onclick="openCreateUserPane()">@Localizer["Create"]</button>
                <button id="btnEdit" class="btn btn-primary btn-sm me-2" data-bs-toggle="modal" disabled>@Localizer["Edit"]</button>
                <button id="btnDelete" class="btn btn-primary btn-sm me-2" data-bs-toggle="modal" disabled>@Localizer["Delete"]</button>
                <!-- Search Bar -->
                @using (Html.BeginForm("Index", "UserManagement", FormMethod.Get)) {
                    <input type="text" id="searchBar" class="form-control-sm me-2" name="searchString" value="@ViewBag.CurrentFilter" onkeyup="filterTable()" />
                    <input type="submit" class="btn btn-primary btn-sm me-2" value="Search" />
                }
            </div>

            <div class="table-responsive">
                <table class="table table-striped table-sm table-hover align-middle" id="userTable">
                    <thead class="table-light">
                        <tr>
                            <th>
                                <input type="checkbox" id="selectAll" onclick="toggleAll(this);">
                            </th>
                            <th>@Html.ActionLink(Localizer["Username"].Value, "Index", new { sortOrder = ViewBag.UserNameSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                            <th>@Html.ActionLink(Localizer["Email"].Value, "Index", new { sortOrder = ViewBag.EmailSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                            <th>@Html.ActionLink(Localizer["Full Name"].Value, "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                            <th>Confirmed User?</th>
                            <th>Active User?</th>
                            <th>@Html.ActionLink(Localizer["ID"].Value, "Index", new { sortOrder = ViewBag.IdSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                            <th>More</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model)
                        {
                            <tr onclick="toggleButtons(this)">
                                <td>
                                    <input type="checkbox" class="user-checkbox" value="@user.Id" onclick="toggleButtons();">
                                </td>
                                <td>@Html.DisplayFor(modelItem => user.UserName)</td>
                                <td>@Html.DisplayFor(modelItem => user.Email)</td>
                                <td>@Html.DisplayFor(modelItem => user.FullName)</td>
                                <td>
                                        @if (user.IsConfirmed)
                                        {
                                        <span class="badge bg-success">Yes</span>
                                        }
                                        else
                                        {
                                        <span class="badge bg-danger">No</span>
                                        }
                                </td>
                                    <td>
                                        @if (user.IsActive)
                                        {
                                        <span class="badge bg-success">Yes</span>
                                        }
                                        else
                                        {
                                        <span class="badge bg-danger">No</span>
                                        }
                                </td>
                                <td>@Html.DisplayFor(modelItem => user.Id)</td>
                                <td>
                                    <a class="btn-sm btn-primary" style="cursor: pointer" onclick="openUserDetailsTab('@user.Id', '@user.UserName')">@Localizer["View Details"]</a>
                                </td>
                            </tr>

                            <!-- Edit User Modal -->
                            <div class="modal fade" id="editUserModal-@user.Id" tabindex="-1">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="editUserModalLabel-@user.Id">Edit User</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                        </div>
                                        <div class="modal-body">
                                            <partial name="_EditUser" model="@new OrderMgmtRevision.Models.UserViewModel { Id = user.Id, UserName = user.UserName, Email = user.Email, FullName = user.FullName, IsConfirmed = user.IsConfirmed }" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Delete User Modal -->
                            <div class="modal fade" id="deleteUserModal-@user.Id" tabindex="-1">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="deleteUserModalLabel-@user.Id">Delete User</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <p id="deleteWarning">Are you sure you want to delete the user <strong>@user.UserName</strong>? This action cannot be undone.</p>
                                            <partial name="_DeleteUser" model="@user" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Modals here unchanged -->
                        }

                        @* <div class="modal fade" id="createUserModal" tabindex="-1"> *@
                        @*     <div class="modal-dialog"> *@
                        @*         <div class="modal-content"> *@
                        @*             <div class="modal-header"> *@
                        @*                 <h5 class="modal-title" id="createUserModal">Create User</h5> *@
                        @*                 <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> *@
                        @*             </div> *@
                        @*             <div class="modal-body"> *@
                        @*                 <partial name="_CreateUser" model="new UserViewModel()" /> *@
                        @*             </div> *@
                        @*         </div> *@
                        @*     </div> *@
                        @* </div> *@

                    </tbody>
                </table>
                <div class="d-flex justify-content-center mt-3">
                    <div>
                        @if (Model.HasPreviousPage)
                        {
                            <a class="btn btn-secondary btn-sm"
                               href="@Url.Action("Index", new {
                               page = Model.PageNumber - 1,
                               sortOrder = ViewBag.CurrentSort,
                               currentFilter = ViewBag.CurrentFilter,
                               activeTab = "userList"
                           })">&lt;</a>
                        }
                        else
                        {
                            <button class="btn btn-secondary btn-sm" disabled>&lt;</button>
                        }

                        @if (Model.HasNextPage)
                        {
                            <a class="btn btn-secondary btn-sm"
                               href="@Url.Action("Index", new {
                               page = Model.PageNumber + 1,
                               sortOrder = ViewBag.CurrentSort,
                               currentFilter = ViewBag.CurrentFilter,
                               activeTab = "userList"
                           })">&gt;</a>
                        }
                        else
                        {
                            <button class="btn btn-secondary btn-sm" disabled>&gt;</button>
                        }
                    </div>

                    <div class="ms-3">
                        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="tab-pane" id="userLogs">
        <div class="ms-5 me-5">
            <h4>@Localizer["User Logs"]</h4>
            <div class="d-flex justify-content-start mb-2">
                <input type="text" id="logSearchBar" class="form-control-sm" style="width: 20%; height: 10%" placeholder="@Localizer["Search by Log Id or Username"]" onkeyup="filterLogs()" />
                <button class="btn btn-danger btn-sm ms-2" data-bs-toggle="modal" data-bs-target="#clearLogsModal">
                    @Localizer["Clear All Logs"]
                </button>
            </div>

            <div class="table-responsive">
                <table class="table table-striped table-sm table-hover align-middle" id="logTable">
                    <thead class="table-light">
                        <tr>
                            <th>@Localizer["Log Id"]</th>
                            <th>@Localizer["Username"]</th>
                            <th>@Localizer["Action"]</th>
                            <th>@Localizer["Timestamp"]</th>
                            <th>@Localizer["IP Address"]</th>
                            <th>@Localizer["User Id"]</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var log in ViewBag.LogsPagedList)
                        {
                            <tr>
                                <td>@log.Id</td>
                                <td>@log.UserName</td>
                                <td>@log.Action</td>
                                <td>@log.Timestamp.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                <td>@log.IpAddress</td>
                                <td>@log.UserId</td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="d-flex justify-content-center mt-3">
                    <div>
                        @if (ViewBag.LogsPagedList.HasPreviousPage)
                        {
                            <a class="btn btn-secondary btn-sm"
                               href="@Url.Action("Index", new {
                               logPage = ViewBag.LogsPagedList.PageNumber - 1,
                               page = Model.PageNumber,
                               sortOrder = ViewBag.CurrentSort,
                               currentFilter = ViewBag.CurrentFilter,
                               activeTab = "userLogs"
                              })">&lt;</a>
                        }
                        else
                        {
                            <button class="btn btn-secondary btn-sm" disabled>&lt;</button>
                        }

                        @if (ViewBag.LogsPagedList.HasNextPage)
                        {
                            <a class="btn btn-secondary btn-sm"
                               href="@Url.Action("Index", new {
                               logPage = ViewBag.LogsPagedList.PageNumber + 1,
                               page = Model.PageNumber,
                               sortOrder = ViewBag.CurrentSort,
                               currentFilter = ViewBag.CurrentFilter,
                               activeTab = "userLogs"
                              })">&gt;</a>
                        }
                        else
                        {
                            <button class="btn btn-secondary btn-sm" disabled>&gt;</button>
                        }
                    </div>

                    <div class="ms-3">
                        Page @(ViewBag.LogsPagedList.PageCount < ViewBag.LogsPagedList.PageNumber ? 0 : ViewBag.LogsPagedList.PageNumber) of @ViewBag.LogsPagedList.PageCount
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="clearLogsModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@Localizer["Confirm Log Clearance"]</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>@Localizer["Are you sure you want to delete all logs? This action cannot be undone."]</p>
                </div>
                <div class="modal-footer">
                    <form asp-action="ClearLogs" asp-controller="UserManagement" method="post">
                        <button type="submit" class="btn btn-danger">@Localizer["Yes, Clear Logs"]</button>
                    </form>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Cancel"]</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/js/users.js"></script>


