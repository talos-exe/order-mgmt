@model X.PagedList.IPagedList<OrderMgmtRevision.Models.UserViewModel>
@using X.PagedList.Mvc.Core;
@using X.PagedList;

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

<!-- Title Centering-->
<h2 class="text-center mb-4 pt-4">User Management</h2>

<ul class="nav nav-tabs ms-5 me-5" id="adminTabs">
    <li class="nav-item">
        <a class="nav-link active" id="userListTab" data-bs-toggle="tab" href="#userList">User List</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="userLogsTab" data-bs-toggle="tab" href="#userLogs">User Logs</a>
    </li>
</ul>

<div class="tab-content mt-3">

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show ms-5 me-5" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if(TempData["Error"] != null) {
        <div class="alert alert-danger alert-dismissible fade show ms-5 me-5" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Errors"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show ms-5 me-5" role="alert">
            <ul>
                @foreach (var error in (TempData["Errors"] as IEnumerable<string> ?? new List<string>()))
                {
                    <li>@error</li>
                }
            </ul>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- User List Tab -->
    <div class="tab-pane fade show active" id="userList">
        <div class="ms-5 me-5">
            <div class="d-flex justify-content-start mb-2">
                <button id="btnCreate" class="btn btn-primary btn-sm me-2" onclick="openCreateUserPane()">Create</button>
                <button id="btnEdit" class="btn btn-primary btn-sm me-2" data-bs-toggle="modal" disabled>Edit</button>
                <button id="btnDelete" class="btn btn-primary btn-sm me-2" data-bs-toggle="modal" disabled>Delete</button>

                <!-- Search Bar -->
                @using (Html.BeginForm("Index", "UserManagement", FormMethod.Get)) {
                    <input type="text" id="searchBar" class="form-control-sm me-2" name="searchString" value="@ViewBag.CurrentFilter" onkeyup="filterTable()" />
                    <input type="submit" class="btn btn-primary btn-sm me-2" value="Search" />
                }
            </div>

            <div class="table-responsive">
                <table class="table table-striped table-sm table-hover align-middle" id="userTable">
                    <thead class="table-light">
                        <tr>
                            <th>
                                <input type="checkbox" id="selectAll" onclick="toggleAll(this);">
                            </th>
                            <th>@Html.ActionLink("Username", "Index", new { sortOrder = ViewBag.UserNameSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                            <th>@Html.ActionLink("Email", "Index", new { sortOrder = ViewBag.EmailSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                            <th>@Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                            <th>@Html.ActionLink("ID", "Index", new { sortOrder = ViewBag.IdSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                            <th>More</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model)
                        {
                            <tr onclick="toggleButtons(this)">
                                <td>
                                    <input type="checkbox" class="user-checkbox" value="@user.Id" onclick="toggleButtons();">
                                </td>
                                <td>@Html.DisplayFor(modelItem => user.UserName)</td>
                                <td>@Html.DisplayFor(modelItem => user.Email)</td>
                                <td>@Html.DisplayFor(modelItem => user.FullName)</td>
                                <td>@Html.DisplayFor(modelItem => user.Id)</td>
                                <td>
                                    <a class="btn-sm btn-primary" style="cursor: pointer" onclick="openUserDetailsTab('@user.Id', '@user.UserName')">View Details</a>
                                </td>
                            </tr>

                            <!-- Edit User Modal -->
                            <div class="modal fade" id="editUserModal-@user.Id" tabindex="-1">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="editUserModalLabel-@user.Id">Edit User</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                        </div>
                                        <div class="modal-body">
                                            <partial name="_EditUser" model="@user" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Delete User Modal -->
                            <div class="modal fade" id="deleteUserModal-@user.Id" tabindex="-1">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="deleteUserModalLabel-@user.Id">Delete User</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <p id="deleteWarning">Are you sure you want to delete the user <strong>@user.UserName</strong>? This action cannot be undone.</p>
                                            <partial name="_DeleteUser" model="@user" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                        }

                        @* <div class="modal fade" id="createUserModal" tabindex="-1"> *@
                        @*     <div class="modal-dialog"> *@
                        @*         <div class="modal-content"> *@
                        @*             <div class="modal-header"> *@
                        @*                 <h5 class="modal-title" id="createUserModal">Create User</h5> *@
                        @*                 <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> *@
                        @*             </div> *@
                        @*             <div class="modal-body"> *@
                        @*                 <partial name="_CreateUser" model="new UserViewModel()" /> *@
                        @*             </div> *@
                        @*         </div> *@
                        @*     </div> *@
                        @* </div> *@

                    </tbody>
                </table>

                <div class="d-flex justify-content-center mt-3">
                    <div>
                        @if (Model.HasPreviousPage)
                        {
                            <a class="btn btn-secondary btn-sm"
                               href="@Url.Action("Index", new {
                               page = Model.PageNumber - 1,
                               sortOrder = ViewBag.CurrentSort,
                               currentFilter = ViewBag.CurrentFilter
                           })">&lt;</a>
                        }
                        else
                        {
                            <button class="btn btn-secondary btn-sm" disabled>&lt;</button>
                        }

                        @if (Model.HasNextPage)
                        {
                            <a class="btn btn-secondary btn-sm"
                               href="@Url.Action("Index", new {
                               page = Model.PageNumber + 1,
                               sortOrder = ViewBag.CurrentSort,
                               currentFilter = ViewBag.CurrentFilter
                           })">&gt;</a>
                        }
                        else
                        {
                            <button class="btn btn-secondary btn-sm" disabled>&gt;</button>
                        }
                    </div>

                    <div class="ms-3">
                        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- User Logs Tab -->
    <div class="tab-pane fade" id="userLogs">
        <div class="ms-5 me-5">
            <h4>User Logs</h4>
            <div class="d-flex justify-content-start mb-2">
                <input type="text" id="logSearchBar" class="form-control-sm" style="width: 20%; height: 10%" placeholder="Search by Log Id or Username" onkeyup="filterLogs()" />
                <button class="btn btn-danger btn-sm ms-2" data-bs-toggle="modal" data-bs-target="#clearLogsModal">
                    Clear All Logs
                </button>
            </div>


            <div class="table-responsive">
                <table class="table table-striped table-sm table-hover align-middle" id="logTable">
                    <thead class="table-light">
                        <tr>
                            <th>Log Id</th>
                            <th>Username</th>
                            <th>Action</th>
                            <th>Timestamp</th>
                            <th>IP Address</th>
                            <th>User Id</th>
                        </tr>
                    </thead>
                    <tbody>
                       @foreach(var log in Model.SelectMany(user => user.Logs).OrderBy(log=>log.Id)) {
                                <tr>
                                    <td>@log.Id</td>
                                    <td>@log.UserName</td>
                                    <td>@log.Action</td>
                                    <td>@log.Timestamp.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                    <td>@log.IpAddress</td>
                                    <td>@log.UserId</td>
                                </tr>
                           }
                    </tbody>
                </table>
            </div>

            <div class="d-flex justify-content-center mt-3">
                <div>
                    <button class="btn btn-secondary btn-sm">Previous</button>
                    <button class="btn btn-secondary btn-sm">Next</button>
                </div>
                <div class="ms-3">
                    Page 1 of 1
                </div>
            </div>
        </div>
    </div>

    <!-- Clear Logs Modal -->
    <div class="modal fade" id="clearLogsModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Log Clearance</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete all logs? This action <strong>cannot be undone</strong>.</p>
                </div>
                <div class="modal-footer">
                    <form asp-action="ClearLogs" asp-controller="UserManagement" method="post">
                        <button type="submit" class="btn btn-danger">Yes, Clear Logs</button>
                    </form>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>

</div>


<script src="~/js/users.js"></script>

