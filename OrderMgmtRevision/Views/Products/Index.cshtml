@model X.PagedList.IPagedList<OrderMgmtRevision.Models.Product>
@using X.PagedList.Mvc.Core;
@using X.PagedList;

@{
    ViewBag.Title = "Products";
}

@section Styles {
    <link rel="stylesheet" href="~/css/dashboard.css" />
}

@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

<h2 class="text-center mb-4 pt-4">@Localizer["Product Management"]</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show ms-5 me-5" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show ms-5 me-5" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["Errors"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show ms-5 me-5" role="alert">
        <ul>
            @foreach (var error in (TempData["Errors"] as IEnumerable<string> ?? new List<string>()))
            {
                <li>@error</li>
            }
        </ul>
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="summary-container">
    <div class="summary-item">
        <div class="item-title">
            @Localizer["Products"]
        </div>
        <div class="item-content">
            <div class="label-value-block">
                <div class="item-label">
                    @Localizer["Ready To Be Shipped"]
                </div>
                <div class="item-value">
                    @Model.Count
                </div>
            </div>
        </div>
    </div>
    <div class="summary-item">
        <div class="item-title">
            @Localizer["Total Products"]
        </div>
        <div class="item-content">
            <div class="label-value-block">
                <div class="item-label">
                    @Localizer["Shipped to Customers"]
                </div>
                <div class="item-value">
                    @{
                        int totalShipped = Model.Sum(p => p.ShipAmount ?? 0);
                    }
                    @totalShipped
                </div>
            </div>
        </div>
    </div>
</div>

<ul class="nav nav-tabs ms-5 me-5" id="productTabs">
    <li class="nav-item">
        <a class="nav-link active" id="productListTab" data-bs-toggle="tab" href="#productList">@Localizer["Product List"]</a>
    </li>
</ul>

<div class="tab-content mt-3">
    <div class="tab-pane fade show active" id="productList">
        <div class="ms-5 me-5">
            <div class="d-flex justify-content-start mb-2">
                <button id="btnCreate" class="btn btn-primary btn-sm me-2" onclick="openCreateProductPane()">@Localizer["Create"]</button>
                <button id="btnEdit" class="btn btn-primary btn-sm me-2" data-bs-toggle="modal" disabled>@Localizer["Edit"]</button>
                <button id="btnDelete" class="btn btn-primary btn-sm me-2" data-bs-toggle="modal" disabled>@Localizer["Delete"]</button>
                @using (Html.BeginForm("Index", "Products", FormMethod.Get)) {
                        <input type="text" id="searchBar" class="form-control-sm me-2" name="searchString" value="@ViewBag.CurrentFilter" onkeyup="filterTable()" />
                        <input type="submit" class="btn btn-primary btn-sm me-2" value="Search" />
                }
            </div>

            <div class="table-responsive">
                <table class="table table-striped table-sm table-hover align-middle" id="productTable">
                    <thead class="table-light">
                        <tr>
                            <th><input type="checkbox" id="selectAll" onclick="toggleAll(this);"></th>
                            <th> @Html.ActionLink(Localizer["SKU"].Value, "Index", new { sortOrder = ViewBag.SKUSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                            <th> @Html.ActionLink(Localizer["Product Name"].Value, "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                            <th> @Html.ActionLink(Localizer["# Stock"].Value, "Index", new { sortOrder = ViewBag.StockSortParm, currentFilter = ViewBag.CurrentFilter })</th>
                            <th> @Html.ActionLink("Created By", "Index", new { sortOrder = ViewBag.CreatedBySortParm, currentFilter = ViewBag.CurrentFilter })</th>
                            <th class="more">@Localizer["More"]</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in Model)
                        {
                            <tr onclick="toggleButtons(this)">
                                <td><input type="checkbox" class="product-checkbox" value="@product.ProductID" onclick="toggleButtons();"></td>
                                <td>@Html.DisplayFor(modelItem => product.SKU)</td>
                                <td>@Html.DisplayFor(modelItem => product.ProductName)</td>
                                <td>@Html.DisplayFor(modelItem => product.Stock)</td>
                                <td>@Html.DisplayFor(modelItem => product.CreatedBy)</td>
                                <td>
                                    <a class="btn-sm btn-primary" style="cursor: pointer" onclick="openProductDetailsTab('@product.ProductID', '@product.ProductName')">@Localizer["View Details"]</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="d-flex justify-content-center mt-3">
                    <div>
                        @if (Model.HasPreviousPage)
                        {
                            <a class="btn btn-secondary btn-sm"
                               href="@Url.Action("Index", new {
                               page = Model.PageNumber - 1,
                               sortOrder = ViewBag.CurrentSort,
                               currentFilter = ViewBag.CurrentFilter
                           })">&lt;</a>
                        }
                        else
                        {
                            <button class="btn btn-secondary btn-sm" disabled>&lt;</button>
                        }

                        @if (Model.HasNextPage)
                        {
                            <a class="btn btn-secondary btn-sm"
                               href="@Url.Action("Index", new {
                               page = Model.PageNumber + 1,
                               sortOrder = ViewBag.CurrentSort,
                               currentFilter = ViewBag.CurrentFilter
                           })">&gt;</a>
                        }
                        else
                        {
                            <button class="btn btn-secondary btn-sm" disabled>&gt;</button>
                        }
                    </div>

                    <div class="ms-3">
                        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<!-- Remove Product Modal -->
<div class="modal fade" id="removeProductModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Localizer["Confirm Product Removal"]</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>@Localizer["Are you sure you want to remove the selected products? This action cannot be undone."]</p>
            </div>
            <div class="modal-footer">
                <form asp-action="RemoveProducts" asp-controller="Products" method="post">
                    <button type="submit" class="btn btn-danger">@Localizer["Yes, Delete"]</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Cancel"]</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="~/js/products.js"></script>

