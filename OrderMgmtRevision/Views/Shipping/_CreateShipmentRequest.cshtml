@model OrderMgmtRevision.Models.ShippingRequestViewModel
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer

@* Required scripts *@
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jquery-validation-unobtrusive@3.2.11/dist/jquery.validate.unobtrusive.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <p>@error.ErrorMessage</p>
        }
    </div>
}

<div class="ms-5 me-5">
    <div class="d-flex justify-content-between mb-3">
        <h4>@Localizer["Create Shipping Request"]</h4>
        <button type="button" class="btn-close" onclick="closeCreateShipment()"></button>
    </div>

    <div class="d-flex mt-3">
        <form id="createShippingRequestForm" asp-action="CreateShippingRequest" asp-controller="Shipping" method="post" class="w-100">
            @Html.AntiForgeryToken()
            <div class="row">

                <div class="col-md-6">
                    <h5>@Localizer["Shipment Details"]</h5>

                    <div class="form-group mb-3">
                        <label asp-for="SourceWarehouseId">@Localizer["Warehouse"]</label>
                        <select asp-for="SourceWarehouseId" class="form-control" id="warehouseSelect" required>
                            <option value="">@Localizer["Select Warehouse"]</option>
                            @foreach (var wh in Model.Warehouses)
                            {
                                <option value="@wh.WarehouseID">
                                    @wh.WarehouseName
                                </option>
                            }
                        </select>
                        <div class="invalid-feedback">@Localizer["Please select a warehouse"]</div>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="ProductID">@Localizer["Product"]</label>
                        <select asp-for="ProductID" class="form-control" id="productSelect" name="ProductID" required>
                            <option value="">@Localizer["Select Product"]</option>
                            @foreach (var prod in Model.ProductList)
                            {
                                <option value="@prod.ProductID">
                                    @prod.ProductName | @prod.SKU
                                </option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Weight">@Localizer["Weight"]</label>
                        <input asp-for="Weight" class="form-control" readonly type="number" />
                    </div>
                    <div class="mb-3">
                        <label asp-for="Length">@Localizer["Length"]</label>
                        <input asp-for="Length" class="form-control" readonly type="number" />
                    </div>
                    <div class="mb-3">
                        <label asp-for="Width">@Localizer["Width"]</label>
                        <input asp-for="Width" class="form-control" readonly type="number" />
                    </div>
                    <div class="mb-3">
                        <label asp-for="Height">@Localizer["Height"]</label>
                        <input asp-for="Height" class="form-control" readonly type="number" />
                    </div>
                </div>

                <div class="col-md-6">
                    <h5>@Localizer["To Address"]</h5>

                    <div class="form-group mb-3">
                        <label asp-for="ToName">@Localizer["Shipment Name"] *</label>
                        <input asp-for="ToName" class="form-control" type="text" />
                        <span asp-validation-for="ToName" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="ToCity">@Localizer["Recipient City"] *</label>
                        <input asp-for="ToCity" class="form-control" type="text" />
                        <span asp-validation-for="ToCity" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="ToState">@Localizer["Recipient State"] *</label>
                        <select asp-for="ToState" class="form-control" asp-items="Model.StateList">
                            <option value="">@Localizer["-- Select State --"]</option>
                        </select>
                        <span asp-validation-for="ToState" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="ToZip">@Localizer["Recipient Zip/Postal Code"] *</label>
                        <input asp-for="ToZip" class="form-control" type="text" />
                        <span asp-validation-for="ToZip" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="ToStreet">@Localizer["Recipient Address"] *</label>
                        <input asp-for="ToStreet" id="toStreetInput" class="form-control" type="text" />
                        <div id="addressSuggestions" class="list-group mt-2" style="display:none;"></div>
                        <span asp-validation-for="ToStreet" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="ToCountryCode">@Localizer["Recipient Country Code"] *</label>
                        <input asp-for="ToCountryCode" class="form-control" type="text" />
                        <span asp-validation-for="ToCountryCode" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="ToPhone">@Localizer["Recipient Phone Number (Optional)"]</label>
                        <input asp-for="ToPhone" class="form-control" type="tel" />
                        <span asp-validation-for="ToPhone" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <input type="hidden" name="selectedRateId" id="selectedRateId" />
            <input type="hidden" id="FromStreet" name="FromStreet" />
            <input type="hidden" id="FromCity" name="FromCity" />
            <input type="hidden" id="FromState" name="FromState" />
            <input type="hidden" id="FromZip" name="FromZip" />
            <input type="hidden" id="FromCountry" name="FromCountry" />
            <input type="hidden" id="FromPhone" name="FromPhone" />
            <input type="hidden" id="FromEmail" name="FromEmail" />
            <input type="hidden" id="FromName" name="FromName" />

            <div class="mt-4">
                <button type="button" id="nextButton" class="btn btn-primary px-5">
                    @Localizer["Next: Choose Rates"]
                </button>
            </div>
        </form>

        <div id="rateSelectionSection" class="mt-5" style="display:none;">
            <h5>@Localizer["Select a Shipping Rate"]</h5>
            <div id="rateOptions" class="row g-3"></div>
        </div>
    </div>
</div>

<div id="loading-overlay" style="display:none; position:fixed; top:0; left:0; right:0; bottom:0; background-color:rgba(0,0,0,0.5); z-index:9999; align-items:center; justify-content:center;">
    <div class="spinner-border text-light" role="status" style="width: 4rem; height: 4rem;">
        <span class="visually-hidden">@Localizer["Loading..."]</span>
    </div>
</div>

<script>
    function showLoader(show) {
        const loader = document.getElementById('loading-overlay');
        if (loader) loader.style.display = show ? 'flex' : 'none';
    }

    function updateProductFields() {
        // Instead of using data attributes, fetch product details from server
        const selectedProductId = $('#productSelect').val();
        if (selectedProductId) {
            showLoader(true);

            $.ajax({
                url: '@Url.Action("GetProductDetailsForShipment", "Products")', // Create this endpoint
                type: 'GET',
                data: { productId: selectedProductId },
                success: function(product) {
                    if (product) {
                        $('[name="Weight"]').val(product.weight);
                        $('[name="Length"]').val(product.length);
                        $('[name="Width"]').val(product.width);
                        $('[name="Height"]').val(product.height);
                    }
                    showLoader(false);
                },
                error: function() {
                    alert('Error loading product details');
                    showLoader(false);
                }
            });
        }
    }

    $('#productSelect').on('change', updateProductFields);

    $('#warehouseSelect').on('change', function () {
        const selectedWarehouseId = $(this).val();
    if (selectedWarehouseId) {
        $.ajax({
            url: '@Url.Action("GetWarehouseDetails", "Warehouse")',
            type: 'GET',
            data: { warehouseId: selectedWarehouseId },
            success: function (wh) {
                // Assign these details to hidden fields if needed for server-side POST
                $('#FromStreet').val(wh.address);
                $('#FromCity').val(wh.city);
                $('#FromState').val(wh.state);
                $('#FromZip').val(wh.zip);
                $('#FromCountry').val(wh.country);
                $('#FromPhone').val(wh.phone);
                $('#FromEmail').val(wh.email);
                $('#FromName').val(wh.name);
                showLoader(false);
            },
            error: function () {
                alert('Error loading warehouse details.');
                showLoader(false);
            }
        });
    }
    });

    let typingTimer;
    const doneTypingInterval = 500;

    $('#toStreetInput').on('input', function() {
        clearTimeout(typingTimer);

        const addressInput = $(this).val();
        if (addressInput.length > 5) {
            typingTimer = setTimeout(function() {
                validateAddress(addressInput);
            }, doneTypingInterval);
        } else {
            $('#addressSuggestions').hide();
        }
    });

    function validateAddress(addressInput) {
        const city = $('#ToCity').val();
        const state = $('#ToState').val();
        const zip = $('#ToZip').val();
        const country = $('#ToCountryCode').val();

        showLoader(true);

        $.ajax({
            url: '@Url.Action("ValidateAddress", "Shipping")',
            type: 'POST',
            data: {
                street: addressInput,
                city: city,
                state: state,
                zip: zip,
                country: country
            },
            headers: {
                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
            },
            success: function(result) {
                if (result && result.suggestions && result.suggestions.length > 0) {
                    displayAddressSuggestions(result.suggestions);
                } else {
                    $('#addressSuggestions').empty().show().append('<div class="list-group-item">No address found</div>');
                }
                showLoader(false);
            },
            error: function(error) {
                console.error('Address validation error:', error);
                showLoader(false);
            }
        });
    }

    function displayAddressSuggestions(suggestions) {
        const container = $('#addressSuggestions');
        container.empty();

        suggestions.forEach(suggestion => {
            const formatted = suggestion.street1 +
                (suggestion.street2 ? ', ' + suggestion.street2 : '') +
                ', ' + suggestion.city +
                ', ' + suggestion.state +
                ' ' + suggestion.zip;

            const item = $('<button>')
                .addClass('list-group-item list-group-item-action')
                .text(formatted)
                .on('click', function(e) {
                    e.preventDefault();
                    // Fill in all address fields with the selected address
                    $('#toStreetInput').val(suggestion.street1);
                    $('#ToCity').val(suggestion.city);
                    $('#ToState').val(suggestion.state);
                    $('#ToZip').val(suggestion.zip);
                    $('#ToCountryCode').val(suggestion.country);

                    // Hide suggestions
                    container.hide();

                    return false;
                });

            container.append(item);
        });

        container.show();
    }

    $('#nextButton').on('click', function () {
        // Validate manually
        if ($('#warehouseSelect').val() === '' || $('#productSelect').val() === '') {
            alert('Please select a warehouse and product.');
            return;
        }

        showLoader(true);

        // Add CSRF token to AJAX headers for all requests
        $.ajaxSetup({
            headers: {
                'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
            }
        });

        // Serialize form data
        const formData = $('#createShippingRequestForm').serialize();

        $.ajax({
            url: '@Url.Action("GetRates", "Shipping")',
            type: 'POST',
            data: formData,
            success: function (rates) {
                $('#createShippingRequestForm').hide();

                $('#rateOptions').empty();

                rates.forEach(rate => {
                    $('#rateOptions').append(`
                        <div class="col-md-4">
                            <div class="card p-3">
                                <p><strong>Provider:</strong> ${rate.provider}</p>
                                <p><strong>Service:</strong> ${rate.service}</p>
                                <p><strong>Amount:</strong> $${rate.amount}</p>
                                <button class="btn btn-sm btn-success select-rate"
                                        data-rate-id="${rate.rateObjectId}">
                                        Select
                                </button>
                            </div>
                        </div>
                    `);
                });
                $('#rateSelectionSection').show();
                showLoader(false);
            },
            error: function () {
                alert('Error retrieving shipping rates. Did you fill out all fields?');
                showLoader(false);
            }
        });
    });

    // Handler for rate selection
    $(document).on('click', '.select-rate', function () {
        const selectedRateId = $(this).data('rate-id');
        $('#selectedRateId').val(selectedRateId);
        $('#createShippingRequestForm').submit();
    });
</script>
