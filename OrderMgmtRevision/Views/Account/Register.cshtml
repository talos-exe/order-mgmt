@model OrderMgmtRevision.Models.RegisterViewModel
@{
    Layout = null;
    ViewData["Title"] = "Register";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"] - OrderMgmtRevision</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
    <style>
        body {
            background: linear-gradient(to bottom right, #000000,#07183D);
        }

    </style>
</head>
<body>
    <div class="d-flex flex-column min-vh-100 justify-content-center align-items-center py-4 px-4 overflow-auto">
        <div class="text-white mb-3 fs-1 fw-bold" id="omsLabel">OMS</div>
        <div class="card register-card p-4 shadow-sm w-100" style="max-width: 450px;">
            <div class="d-flex justify-content-end">
                <div class="form-check form-switch">
                    <label class="form-check-label fw-semibold" for="langToggle" id="langLabel">EN</label>
                    <input class="form-check-input" type="checkbox" id="langToggle" onchange="toggleLanguage()" />
                </div>
            </div>
            <h2 class="text-center text-dark" id="registerLabel">Register</h2>
            <form method="post">
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger">
                        <ul>
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <li>@error.ErrorMessage</li>
                            }
                        </ul>
                    </div>
                }
                <div class="mb-3">
                    <label for="UserName" class="form-label" id="usernameLabel">Username</label>
                    <input type="text" class="form-control" id="UserName" asp-for="UserName"/>
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label for="FullName" class="form-label" id="fullNameLabel">Full Name</label>
                    <input type="text" class="form-control" id="FullName" asp-for="FullName"/>
                    <span asp-validation-for="FullName" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label for="Email" class="form-label" id="emailLabel">Email</label>
                    <input type="email" class="form-control" id="Email" asp-for="Email"/>
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label for="Password" class="form-label" id="passLabel">Password</label>
                    <input type="password" class="form-control" id="Password" asp-for="Password"/>
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label for="ConfirmPassword" class="form-label" id="confirmPassLabel">Confirm Password</label>
                    <input type="password" class="form-control" id="ConfirmPassword" asp-for="ConfirmPassword"/>
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>
                <button type="submit" class="btn btn-primary w-100" id="registerSecondLabel">Register</button>
            </form>
            <div class="mt-3 text-center">
                <p id="backToLabel">Back to <a href="@Url.Action("Login", "Account")" id="loginPageLabel">login page</a>.</p>
            </div>
        </div>
    </div>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    @section Scripts {
        <partial name="_ValidationScriptsPartial" />
    }
    <script>
        const translations = {
            en: {
                langLabel: "EN",
                usernameLabel: "Username",
                passLabel: "Password",
                fullNameLabel: "Full Name",
                emailLabel: "Email",
                confirmPassLabel:"Confirm Password",
                noAccountLabel: "Don't have an account?",
                registerLabel: "Register",
                forgotLabel: "Forgot your password?",
                omsLabel: "OMS",
                backToLabel: "Back to",
                loginPageLabel: "login page"
            },
            zh: {
                langLabel: "ZH",
                usernameLabel: "用户名",
                passLabel: "密码",
                fullNameLabel: "全名",
                emailLabel: "电子邮件",
                confirmPassLabel: "确认密码",
                noAccountLabel: "没有帐户？",
                registerLabel: "在这里注册",
                forgotLabel: "忘记密码？",
                omsLabel: "云服务器",
                backToLabel: "返回",
                loginPageLabel: "登录页面"
            }
        };

        function toggleLanguage() {
            const isEnglish = document.getElementById("langToggle").checked;
            const lang = isEnglish ? "zh" : "en";


            document.getElementById("langLabel").textContent = translations[lang].langLabel;
            document.getElementById("usernameLabel").textContent = translations[lang].usernameLabel;
            document.getElementById("passLabel").textContent = translations[lang].passLabel;
            document.getElementById("confirmPassLabel").textContent = translations[lang].confirmPassLabel;
            document.getElementById("emailLabel").textContent = translations[lang].emailLabel;
            document.getElementById("fullNameLabel").textContent = translations[lang].fullNameLabel;
            document.getElementById("registerLabel").textContent = translations[lang].registerLabel;
            document.getElementById("registerSecondLabel").textContent = translations[lang].registerLabel;
            document.getElementById("omsLabel").textContent = translations[lang].omsLabel;


            const backToText = document.getElementById("backToLabel");
            const loginPageText = document.getElementById("loginPageLabel");

            if (backToText && loginPageText) {
                backToText.childNodes[0].nodeValue = translations[lang].backToLabel + " ";
            }

            document.getElementById("loginPageLabel").textContent = translations[lang].loginPageLabel;
        }

    </script>
</body>
</html>
